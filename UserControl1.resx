<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        y/4fQAmWAlFlwPIAAAAASUVORK5CYII=
</value>
  </data>
</root>